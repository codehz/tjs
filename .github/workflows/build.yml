name: build
on:
  push:
    branches: [ ðŸ’¥ ]

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, i386]
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - run: apk add git musl-dev
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: master
      - name: Build on linux
        run: |
          zig build -Dtarget=${{ matrix.arch }}-linux-musl -Drelease-small=true --verbose
          zig build bootstrap -Dtarget=${{ matrix.arch }}-linux-musl -Drelease-small=true --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: bin-${{ matrix.arch }}-${{ runner.os }}
          path: zig-cache/bin
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, i386]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: master
      - name: Download rcedit.exe
        uses: robinraju/release-downloader@v1
        with:
          repository: electron/rcedit
          fileName: rcedit-x64.exe
          out-file-path: ${{ runner.temp }}/bin/rcedit.exe
      - name: Setup rcedit
        run: Add-Content -Value "${{ runner.temp }}\bin" -Path $env:GITHUB_PATH -Encoding utf8
      - name: Build on windows
        run: |
          zig build -Dtarget=${{ matrix.arch }}-windows-gnu -Drelease-small=true --verbose
          zig build bootstrap -Dtarget=${{ matrix.arch }}-windows-gnu -Drelease-small=true --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: bin-${{ matrix.arch }}-${{ runner.os }}
          path: zig-cache/bin
